version: '3.8'

services:
  whatsapp-coder:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: whatsapp-coder-dev
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "5678:5678"  # Debug port
    environment:
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=DEBUG
      - DEBUG=true
    env_file:
      - .env
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - whatsapp-network
    volumes:
      - ./app:/app/app  # Mount source code for hot reload
      - ./tests:/app/tests
      - ./logs:/app/logs

  redis:
    image: redis:7-alpine
    container_name: whatsapp-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --loglevel debug
    volumes:
      - redis-data-dev:/data
    networks:
      - whatsapp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Optional: ngrok for local development
  ngrok:
    image: ngrok/ngrok:latest
    container_name: whatsapp-ngrok
    restart: unless-stopped
    command: http whatsapp-coder:8000 --log stdout
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    networks:
      - whatsapp-network
    ports:
      - "4040:4040"  # Ngrok web interface

networks:
  whatsapp-network:
    driver: bridge

volumes:
  redis-data-dev:
    driver: local
